QAbstactSocket state
1. unconnected
2. hostLookup
3. connecting
4. connected
5. closing
6. closed


Protobuf(Protocol Buffers)
把某种数据结构的信息，以某种格式保存起来。主要用于数据存储、传输协议格式等场合。
proto文件是描述通讯协议的规格说明书(接口规范)
通用数据交换，网络通信
protocol buffers 是一种语言无关、平台无关、可扩展的序列化结构数据的方法，它可用于（数据）通信协议、数据存储等。

序列化：将结构数据或对象转换成能够被存储和传输（例如网络传输）的格式，同时应当要保证这个序列化结果在之后（可能在另一个计算环境中）能够被重建回原来的结构数据或对象。
类比于XML：这里主要指在数据通信和数据存储应用场景中序列化方面的类比，但XML作为一种扩展标记语言和ProtoBuf还是有着本质区别的。


下边枚举变量描述了在信号和槽之间使用的5种连接类型，决定了一个特定信号是要立即发出还是压入队列之后发出
Qt::AutoConnection  (默认)接收者存在于发射信号的线程，使用Qt::DirectConnection。反之，使用Qt::QueuedConnection。连接类型在信号发出的时候决定
Qt::DirectConnection 信号发出后，槽函数立刻被激活。槽函数在发送者线程中执行
Qt::QueuedConnection 事件循环返回到接收者线程槽函数被执行。槽函数在接收者线程中执行
Qt::BlockingQueuedConnection  发送者线程被阻塞直到槽函数返回,其他性质和Qt::QueuedConnection一样。此连接类型禁止使用在发送者和接收者同属一个线程，否则程序会死锁
Qt::UniqueConnection   这是一个上述连接类型通过或运算组合的连接标志。此标志被使用时，如果连接已经存在QObject::connect()调用会失败。


计算机网络
物理层->通信链路层(负责MAC地址的定位)->网络层(负责IP地址的定位)->传输层->会话层->表示层->应用层
转发：将分组从一个输入链路转移到适当输出链路接口的路由本地操作
路由选择：确定分组从源到目的地所定为的路径的选择。
转发表。
路由器的组成：1.输入端口 2.交换结构(将路由器的输入端口连接到输出端口) 3. 输出端口
            4. 路由选择处理器(在路由器内执行路由协议，维护路由表并执行网络管理功能)
IP的组成：1.IP寻址 2. 路由 3. 分包组包
IP地址是连接网络中的所有主机进行通信的目标地址。
路由控制：将分组数据发送到最终目标地址的功能，及时网络复杂多变，也能通过路由控制到达目标地址。
跳：路由器和路由器之间的数据包传送。
一跳：从源MAC地址到目标MAC地址之间传输帧的区间
子网掩码(网络掩码)：用来指明一个IP地址的那些标识的是主机所在网络。是一个32位地址，用于屏蔽IP地址的一部分
                以区别网络标识和主机标识

网络上两个节点发送数据包的过程：
电脑视角：
首先我要知道我的 IP 以及对方的 IP
通过子网掩码判断我们是否在同一个子网
在同一个子网就通过 arp 获取对方 mac 地址直接扔出去
不在同一个子网就通过 arp 获取默认网关的 mac 地址直接扔出去

交换机视角：
我收到的数据包必须有目标 MAC 地址
通过 MAC 地址表查映射关系
查到了就按照映射关系从我的指定端口发出去
查不到就所有端口都发出去

路由器视角：
我收到的数据包必须有目标 IP 地址
通过路由表查映射关系
查到了就按照映射关系从我的指定端口发出去（不在任何一个子网范围，走其路由器的默认网关也是查到了）
查不到则返回一个路由不可达的数据包
如果你嗅觉足够敏锐，你应该可以感受到下面这句话：

网络层（IP协议）本身没有传输包的功能，包的实际传输是委托给数据链路层（以太网中的交换机）来实现的。

涉及到的三张表分别是

交换机中有 MAC 地址表用于映射 MAC 地址和它的端口
路由器中有路由表用于映射 IP 地址(段)和它的端口
电脑和路由器中都有 arp 缓存表用于缓存 IP 和 MAC 地址的映射关系
这三张表是怎么来的

MAC 地址表是通过以太网内各节点之间不断通过交换机通信，不断完善起来的。
路由表是各种路由算法 + 人工配置逐步完善起来的。
arp 缓存表是不断通过 arp 协议的请求逐步完善起来的。
