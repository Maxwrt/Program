QAbstactSocket state
1. unconnected
2. hostLookup
3. connecting
4. connected
5. closing
6. closed


Protobuf(Protocol Buffers)
把某种数据结构的信息，以某种格式保存起来。主要用于数据存储、传输协议格式等场合。
proto文件是描述通讯协议的规格说明书(接口规范)
通用数据交换，网络通信
protocol buffers 是一种语言无关、平台无关、可扩展的序列化结构数据的方法，它可用于（数据）通信协议、数据存储等。

序列化：将结构数据或对象转换成能够被存储和传输（例如网络传输）的格式，同时应当要保证这个序列化结果在之后（可能在另一个计算环境中）能够被重建回原来的结构数据或对象。
类比于XML：这里主要指在数据通信和数据存储应用场景中序列化方面的类比，但XML作为一种扩展标记语言和ProtoBuf还是有着本质区别的。
在网络编程中使用protobuf要解决两个问题：
长度：protobuf打包的数据没有自带长度信息或者终结符，需要由应用程序自己在发送和接收的时候做正确的切分。
类型：protobuf打包的数据没有自带类型信息，需要由发送方把类型信息传给接收方，接收方创建具体的protobuf message对象，再做的反序列化。
下边枚举变量描述了在信号和槽之间使用的5种连接类型，决定了一个特定信号是要立即发出还是压入队列之后发出
Qt::AutoConnection  (默认)接收者存在于发射信号的线程，使用Qt::DirectConnection。反之，使用Qt::QueuedConnection。连接类型在信号发出的时候决定
Qt::DirectConnection 信号发出后，槽函数立刻被激活。槽函数在发送者线程中执行
Qt::QueuedConnection 事件循环返回到接收者线程槽函数被执行。槽函数在接收者线程中执行
Qt::BlockingQueuedConnection  发送者线程被阻塞直到槽函数返回,其他性质和Qt::QueuedConnection一样。此连接类型禁止使用在发送者和接收者同属一个线程，否则程序会死锁
Qt::UniqueConnection   这是一个上述连接类型通过或运算组合的连接标志。此标志被使用时，如果连接已经存在QObject::connect()调用会失败。

计算机网络
物理层->通信链路层(负责MAC地址的定位)->网络层(负责IP地址的定位)->传输层->会话层->表示层->应用层
转发：将分组从一个输入链路转移到适当输出链路接口的路由本地操作
路由选择：确定分组从源到目的地所定的路径的选择。
转发表。
路由器的组成：1.输入端口 2.交换结构(将路由器的输入端口连接到输出端口) 3. 输出端口
           4.路由选择处理器(在路由器内执行路由协议，维护路由表并执行网络管理功能)
IP的组成：1.IP寻址 2. 路由 3. 分包组包
IP地址是连接网络中的所有主机进行通信的目标地址。
路由控制：将分组数据发送到最终目标地址的功能，即使网络复杂多变，也能通过路由控制到达目标地址。
跳：路由器和路由器之间的数据包传送。
一跳：从源MAC地址到目标MAC地址之间传输帧的区间
子网掩码(网络掩码)：用来指明一个IP地址的那些标识的是主机所在网络。是一个32位地址，用于屏蔽IP地址的一部分
                以区别网络标识和主机标识

网络上两个节点发送数据包的过程：
电脑视角：
首先我要知道我的IP以及对方的IP
通过子网掩码判断我们是否在同一个子网
在同一个子网就通过arp获取对方mac地址直接扔出去
不在同一个子网就通过arp获取默认网关的mac地址直接扔出去

交换机视角：
我收到的数据包必须有目标MAC地址
通过MAC地址表查映射关系
查到了就按照映射关系从我的指定端口发出去
查不到就所有端口都发出去

路由器视角：
我收到的数据包必须有目标IP地址
通过路由表查映射关系
查到了就按照映射关系从我的指定端口发出去（不在任何一个子网范围，走其路由器的默认网关也是查到了）
查不到则返回一个路由不可达的数据包
如果你嗅觉足够敏锐，你应该可以感受到下面这句话：
网络层（IP协议）本身没有传输包的功能，包的实际传输是委托给数据链路层（以太网中的交换机）来实现的。

涉及到的三张表分别是

交换机中有MAC地址表用于映射MAC地址和它的端口
路由器中有路由表用于映射IP地址(段)和它的端口
电脑和路由器中都有arp缓存表用于缓存IP和MAC地址的映射关系
这三张表是怎么来的
MAC地址表是通过以太网内各节点之间不断通过交换机通信，不断完善起来的。
路由表是各种路由算法 + 人工配置逐步完善起来的。
arp缓存表是不断通过arp协议的请求逐步完善起来的。

172.16.198.12/20
n为1到32的数字，表示子网掩码中网络号的长度，通过n的个数确定子网的主机数=2^(32-n)-2。
（-2的原因：主机位全为0时表示本网络的网络地址，主机位全为1时表示本网络的广播地址，这是两个特殊地址）
◆ 有类网络：也叫主类网络或标准网络，就是指把IP地址能归结到的A类、B类、C类IP，使用的是标准的默认子网掩码。

◆ 无类网络：相对于有类网络，无类网络IP地址的掩码是变长的。在有类网络的基础上，拿出一部分主机ID作为子网ID。

◆ 超网：把多个小网络组合成一个大网络，称为超网（SuperNetting），也可以说子网掩码长度小于相对应的有类网络的叫超网。

◆ 子网：有类网络划分成更小后的网络，称为子网（Subnet），也可以说子网掩码长度大于相对应的有类网络的叫子网
CIDR(无类别域间路由) Classless Inter-Domain Routing
VLSM(可变长子网掩码) Variable Length Subnet Mask

2、全0子网与全1子网
①、“全0子网”代表的是对应子网的“子网ID”部分各位都是0，是第一个子网。

②、“全1子网”代表的是对应子网的“子网ID”部分各位都是1，是最后一个子网。

③、按照RFC950参考规定，划分子网后，只有n-2个可用的子网（n表示总的子网数）。

④、后来RFC1878参考规定，划分子网后，可以有n个可用的子网（n表示总的子网数）。

RFC950参考规定：第一个子网（也就是“全0子网”）和最后一个子网（也就是“全1子网”）不可用，
为的就是避免全0子网的网络地址和全1子网的广播地址分别与没有划分子网前的网络地址和广播地址相冲突。
但是在后来RFC1878规定中，该项规定已被废止了，现在的设备基本上都普遍支持RFC1878。
0.0.0.0表示所有的ip地址 255.255.255.255广播地址
有类网络
分类      子网掩码        地址范围                    网络地址        广播地址         可用地址范围              私有地址范围                  特殊地址
A       255.0.0.0       1.0.0.0~126.255.255.255    1.0.0.0       126.255.255.255 1.0.0.1~126.255.255.254 10.0.0.0~10.255.255.255     0.0.0.0和127.0.0.0
B       255.255.0.0     128.0.0.0~191.255.255.255  128.0.0.0     191.255.255.255 128.0.0.1~191.255.255.254 172.16.0.0~172.31.0.0     128.0.0.0和191.255.0.0
C       255.255.255.0   192.0.0.0~223.255.255.255  192.0.0.0     223.255.255.255 192.0.0.1~223.255.255.254 192.168.0.0~192.168.255.0 192.0.0.0和192.255.255.0
D                       224.0.0.0~239.255.255.255
路由类型：[优先级值越小，优先级越高]
直连路由(direct)[0]：是唯一一种自动向路由表添加路由条目
动态路由OSPF(OSPF)[10]：
静态路由(Static)[60]：默认情况下，路由器只会自动生成直连路由。对于非直连网络，路由器并不知道如何转发才能到达非直连网络。这时，我们需要手动添加路由告诉路由器如何转发去某个网络的数据包
动态路由RIP(RIP)[100]：
默认路由[0.0.0.0/0]：帮助路由器发送路由表中无法查询的包。如果设置了全0网络的路由，路由表中无法查询的包都将送到全0网络的路由中去。
两个网络之间要实现通信，必须要通过网关。一台主机可以由多个网关，当一台主机找不到可用的网关时，数据包可以发送给默认网关。其实主机上配置的默认网关就是默认路由
